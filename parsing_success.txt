Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Dec (
                      (Ast.TypA ((Ast.TypA (Ast.TypI, (Some 10))), (Some 5))),
                      "a"))
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a") },
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 0) }
                                           ))
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0) }
                                      ))
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Vardec ((Ast.TypA ((Ast.TypA (Ast.TypI, (Some 5))), (Some 2))),
         "b"))
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo";
           formals =
           [((Ast.TypA ((Ast.TypA (Ast.TypI, None)), None)), "a");
             (Ast.TypI, "i"); (Ast.TypI, "j")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.AccIndex (
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "a") },
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "i") })
                                                  }
                                                ))
                                             },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "j") })
                                             }
                                           ))
                                        })
                                   }))
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypB, "b")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 10) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "b") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "true") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "b") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "false") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "false") })
                                   }
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypB, "b")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "b") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 48) }
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "myvoid"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt { Ast.loc = <opaque>; node = (Ast.Return None) })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.Call ("myvoid", [])) }
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node = (Ast.Dec ((Ast.TypP Ast.TypI), "ptr")) };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "a"))
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "ptr") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "a")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "a")) };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "b")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "b") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node = (Ast.Dec ((Ast.TypP Ast.TypI), "ptr")) };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "a")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "ptr") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node = (Ast.Dec ((Ast.TypP Ast.TypI), "ptr")) };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "a")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "ptr") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a") },
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 0) }
                                           ))
                                        })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "ptr") })
                                             },
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1) }
                                           ))
                                        })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 10) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 15) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    }))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 32) }
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 15) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Return
                                        (Some { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                }))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 32) }
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")) };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "b")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "foo";
            formals = [(Ast.TypI, "c"); (Ast.TypB, "d")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "dd")) };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypB, "e")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Add,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a") })
                                    },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "c") })
                                    }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Sub,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "c") })
                                    },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a") })
                                    }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Mult,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a") })
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Div,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "c") })
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Add,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "d") })
                                    },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a") })
                                    }
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")) };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "b")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "foo";
            formals = [(Ast.TypI, "c"); (Ast.TypB, "d")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypB, "e")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Add,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b") })
                                    },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a") })
                                    }
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>; node = (Ast.Block [])
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "true") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.Block []) })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node = (Ast.Block []) })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10) }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.If (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Equal,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    3) })) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Return
                                                                    (Some 
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    42) })) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []) }
                                                                   ))
                                                                })
                                                           }
                                                          ])
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "j") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10) }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.Block []) })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "j") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10) }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.Block []) })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.Block []) })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10) }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.Block []) })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10) }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "foo", 
                                                                    [])) })
                                                                })
                                                           }
                                                          ])
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [];
           body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "bar"; formals = [];
            body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "baz"; formals = [];
            body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "bar"; formals = [];
            body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "foo";
           formals = [((Ast.TypP Ast.TypI), "a"); (Ast.TypI, "i")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Assign (
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.AccIndex (
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a") },
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "i") })
                                       }
                                     ))
                                  },
                                { Ast.loc = <opaque>; node = (Ast.ILiteral 0)
                                  }
                                ))
                             })
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "foo";
           formals = [((Ast.TypP Ast.TypI), "a"); (Ast.TypI, "i")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Assign (
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.AccDeref
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "a") })
                                       })
                                  },
                                { Ast.loc = <opaque>; node = (Ast.ILiteral 0)
                                  }
                                ))
                             })
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "a"))
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("foo",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 0) }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo";
           formals = [(Ast.TypI, "a"); (Ast.TypB, "b"); (Ast.TypI, "c")];
           body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "bar";
            formals = [(Ast.TypI, "a"); (Ast.TypB, "b"); (Ast.TypI, "a")];
            body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo";
           formals = [(Ast.TypI, "a"); (Ast.TypB, "b"); (Ast.TypI, "c")];
           body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "bar";
            formals = [(Ast.TypI, "a"); (Ast.TypV, "b"); (Ast.TypI, "c")];
            body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [];
           body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "bar"; formals = [];
            body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "print"; formals = [];
            body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "baz"; formals = [];
            body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [];
           body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "bar"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a")) };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypV, "b")) };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypB, "c")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "foo";
           formals = [(Ast.TypI, "a"); (Ast.TypB, "b")];
           body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("foo",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42) };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "true") })
                                     }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("foo",
                                  [{ Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 42) }
                                    ]
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "foo";
           formals = [(Ast.TypI, "a"); (Ast.TypB, "b")];
           body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("foo",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42) };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "true") })
                                     }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("foo",
                                  [{ Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 42) };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "true") })
                                      };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "false") })
                                      }
                                    ]
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "foo";
           formals = [(Ast.TypI, "a"); (Ast.TypB, "b")];
           body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "bar"; formals = [];
            body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("foo",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42) };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "true") })
                                     }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("foo",
                                  [{ Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 42) };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.Call ("bar", [])) }
                                    ]
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "foo";
           formals = [(Ast.TypI, "a"); (Ast.TypB, "b")];
           body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("foo",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42) };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "true") })
                                     }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("foo",
                                  [{ Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 42) };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 42) }
                                    ]
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "c")) };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "b")) };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypV, "a")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "b")) };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "c")) };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")) };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "b")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Access
                                { Ast.loc = <opaque>;
                                  node = (Ast.AccVar "true") })
                             },
                           { Ast.loc = <opaque>; node = (Ast.Block []) },
                           { Ast.loc = <opaque>; node = (Ast.Block []) }))
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Access
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "false") })
                              },
                            { Ast.loc = <opaque>; node = (Ast.Block []) },
                            { Ast.loc = <opaque>; node = (Ast.Block []) }))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>; node = (Ast.ILiteral 42) },
                            { Ast.loc = <opaque>; node = (Ast.Block []) },
                            { Ast.loc = <opaque>; node = (Ast.Block []) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Access
                                { Ast.loc = <opaque>;
                                  node = (Ast.AccVar "true") })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Block
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Stmt
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Expr
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "foo") })
                                             })
                                        })
                                   }
                                  ])
                             },
                           { Ast.loc = <opaque>; node = (Ast.Block []) }))
                        })
                   }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Access
                                { Ast.loc = <opaque>;
                                  node = (Ast.AccVar "true") })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Block
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Stmt
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Expr
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 42) })
                                        })
                                   }
                                  ])
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Block
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Stmt
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Expr
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "bar") })
                                             })
                                        })
                                   }
                                  ])
                             }
                           ))
                        })
                   }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node = (Ast.Dec (Ast.TypI, "overflow")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "overflow") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2147483648) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node = (Ast.Dec (Ast.TypI, "underflow")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "underflow") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.UnaryOp (Ast.Neg,
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 2147483649) }
                                      ))
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "foo"; formals = [(Ast.TypB, "i")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") })
                                         },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") })
                                         }
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("foo",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "true") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog [])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "true") })
                                   }))
                        })
                   }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "foo"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Access
                                { Ast.loc = <opaque>;
                                  node = (Ast.AccVar "true") })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42) }))
                             },
                           { Ast.loc = <opaque>; node = (Ast.Return None) }))
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Access
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "true") })
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "i") },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Add,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "i")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 1) }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>; node = (Ast.ILiteral 42) },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "i") },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Add,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "i")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 1) }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Access
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "true") })
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "i") },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Add,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "i")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 1) }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Access
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "true") })
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node = (Ast.Call ("foo", [])) })
                                         })
                                    }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "x") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "y") })
                                        }
                                      ))
                                   }))
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 17) };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 25) }
                                         ]
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 39) },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 3) }
                                      ))
                                   }
                                  ]
                                ))
                             })
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1) },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Mult,
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 2) },
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.ILiteral 3) }
                                                ))
                                             }
                                           ))
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 4) }
                                      ))
                                   }
                                  ]
                                ))
                             })
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [(Ast.TypI, "a")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a") })
                                   }))
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a") },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "a") })
                                         },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5) }
                                       ))
                                    }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a") })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "a"))
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10) }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Assign (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccIndex (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a") },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                  ))
                                                               },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.BinaryOp (
                                                                  Ast.Add,
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                  ))
                                                               }
                                                             ))
                                                          })
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 10) }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call ("print",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "a") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })
                                                                }
                                                               ]
                                                             ))
                                                          })
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "set_element";
           formals =
           [(Ast.TypI, "i"); ((Ast.TypA (Ast.TypI, None)), "a");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Assign (
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.AccIndex (
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a") },
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "i") })
                                       }
                                     ))
                                  },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "n") })
                                  }
                                ))
                             })
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "b"))
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0) }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10) }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "set_element",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") })
                                                                 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b") })
                                                                  };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                  }
                                                                ]
                                                              ))
                                                           })
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0) }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 10) }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "b") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })
                                                                 }
                                                                ]
                                                              ))
                                                           })
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 10))), "a")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a") },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0) }
                                      ))
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.AccIndex (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "a") },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0) }
                                             ))
                                          })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "leftRotate";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "d");
             (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "d") })
                                               }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Call (
                                                             "leftRotatebyOne",
                                                             [{ Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") })
                                                                };
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") })
                                                                 }
                                                               ]
                                                             ))
                                                          })
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "leftRotatebyOne";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "temp") },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccIndex (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "arr") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0) }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Sub,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "n") })
                                                     },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1)
                                                     }
                                                   ))
                                                }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                   ))
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) })
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") })
                                         }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "temp") })
                                    }
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0) }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n")
                                                     })
                                                }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })
                                                                 }
                                                                ]
                                                              ))
                                                           })
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 7))), "arr"))
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 6) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("leftRotate",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 2) };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7) }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 7) }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "reverseArray";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "start");
             (Ast.TypI, "end")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "temp")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "start") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "end") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "temp")
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar
                                                                "arr")
                                                             },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "start")
                                                                  })
                                                             }
                                                           ))
                                                        })
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr") },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start")
                                                              })
                                                         }
                                                       ))
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccIndex (
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "arr")
                                                              },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Access
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.AccVar
                                                                    "end")
                                                                   })
                                                              }
                                                            ))
                                                         })
                                                    }
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "arr") },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end")
                                                              })
                                                         }
                                                       ))
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "temp")
                                                         })
                                                    }
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "start") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "start")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "end")
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "end")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0) }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "size") })
                                                }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })
                                                                 }
                                                                ]
                                                              ))
                                                           })
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"))
                    };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0) }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 6) }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccIndex (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                   ))
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("reverseArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 0) };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.BinaryOp (Ast.Sub,
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "n") })
                                           },
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1) }
                                         ))
                                      }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n") })
                                      }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "binarySearch";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "low");
             (Ast.TypI, "high"); (Ast.TypI, "key")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "high") })
                                  },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "low") })
                                  }
                                ))
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node =
                                        (Ast.UnaryOp (Ast.Neg,
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 1) }
                                           ))
                                        }))
                             },
                           { Ast.loc = <opaque>; node = (Ast.Block []) }))
                        })
                   };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "mid")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "mid") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Div,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Add,
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "low") })
                                             },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "high")
                                                  })
                                             }
                                           ))
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 2) }
                                      ))
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Equal,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "key") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "arr") },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "mid") })
                                             }
                                           ))
                                        })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "mid") })
                                         }))
                              },
                            { Ast.loc = <opaque>; node = (Ast.Block []) }))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "key") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "arr") },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "mid") })
                                             }
                                           ))
                                        })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("binarySearch",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "arr")
                                                    })
                                               };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Add,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "mid")
                                                          })
                                                     },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1)
                                                     }
                                                   ))
                                                };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "high") })
                                                };
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "key") })
                                                }
                                              ]
                                            ))
                                         }))
                              },
                            { Ast.loc = <opaque>; node = (Ast.Block []) }))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("binarySearch",
                                       [{ Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "arr") })
                                          };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "low") })
                                           };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Sub,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "mid") })
                                                },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1) }
                                              ))
                                           };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "key") })
                                           }
                                         ]
                                       ))
                                    }))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"))
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 8) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 9) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "key") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("binarySearch",
                                        [{ Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "arr") })
                                           };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 0) };
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.Access
                                               { Ast.loc = <opaque>;
                                                 node = (Ast.AccVar "n") })
                                            };
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.Access
                                               { Ast.loc = <opaque>;
                                                 node = (Ast.AccVar "key") })
                                            }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printLeaders";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "size") })
                                               }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Dec (
                                                              Ast.TypI, "j"))
                                                           };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Less,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "size") })
                                                                    })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.UnaryOp (
                                                                    Ast.Not,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Leq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) }
                                                                    )) }) }))
                                                                    })) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []) }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    }]) })) })
                                                                    }])
                                                                 })
                                                            };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.If (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Equal,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "size") })
                                                                    })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) }) }]
                                                                    )) }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []) }))
                                                                 })
                                                            }
                                                          ])
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"))
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 16) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 4) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 3) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printLeaders",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n") })
                                      }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "n") })
                                                    }
                                                   ]
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Call ("fac",
                                                       [{ Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i")
                                                               })
                                                          }
                                                         ]
                                                       ))
                                                    }
                                                   ]
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "n") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "fac"; formals = [(Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Equal,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.BinaryOp (Ast.Mult,
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "n") })
                                              },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("fac",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                   ]
                                                 ))
                                              }
                                            ))
                                         }))
                              }
                            ))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "u")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Dec ((Ast.TypA (Ast.TypB, (Some 100))), "used")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Dec ((Ast.TypA (Ast.TypB, (Some 100))), "diag1")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Dec ((Ast.TypA (Ast.TypB, (Some 100))), "diag2")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 100))), "col")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 11) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "u") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 1) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Leq,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "u") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.AccIndex (
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "used") },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "u")
                                                             })
                                                        }
                                                      ))
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "false")
                                                        })
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "u") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "u")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "u") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 1) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Leq,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "u") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Mult,
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 2) },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "n") })
                                        }
                                      ))
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.AccIndex (
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "diag1")
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "u")
                                                             })
                                                        }
                                                      ))
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Assign (
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar
                                                                "diag2")
                                                             },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "u")
                                                                  })
                                                             }
                                                           ))
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar
                                                                "false")
                                                             })
                                                        }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "u") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "u")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Assign (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "u") },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1) }
                                      ))
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.While (
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.BinaryOp (Ast.And,
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Leq,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "i")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "n")
                                                             })
                                                        }
                                                      ))
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Neq,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "i")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 0) }
                                                      ))
                                                   }
                                                 ))
                                              },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Block
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Stmt
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.While (
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.BinaryOp (
                                                                 Ast.And,
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.BinaryOp (
                                                                    Ast.Leq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                    ))
                                                                   },
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.BinaryOp (
                                                                    Ast.Or,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Or,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "used") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) }
                                                                    )) }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag1")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                    )) })) })
                                                                    })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag2")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })) })
                                                                    }))
                                                                   }
                                                                 ))
                                                              },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Expr
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    ))
                                                                   })
                                                              }
                                                            ))
                                                         })
                                                    };
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Stmt
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.If (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.BinaryOp (
                                                                  Ast.Leq,
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                  ))
                                                               },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Block
                                                                  [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "col") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) }
                                                                    )) }) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag1")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag2")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "used") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "true") })
                                                                    })) })) }
                                                                    )) }) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) })
                                                                    }) }])
                                                               },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Block
                                                                  [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.If (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Greater,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "col") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) }) }))
                                                                    }) }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag1")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag2")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "used") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "false")
                                                                    }) })) }
                                                                    )) })) })
                                                                    }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    }]) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []) })) })
                                                                    }])
                                                               }
                                                             ))
                                                          })
                                                     }
                                                   ])
                                              }
                                            ))
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.If (
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Greater,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i") })
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "n") })
                                                    }
                                                  ))
                                               },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Block
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Dec (Ast.TypI, "j"
                                                        ))
                                                     };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Stmt
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Expr
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Assign (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                })
                                                           })
                                                      };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Stmt
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.While (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Leq,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                   ))
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Block
                                                                   [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "col") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) }
                                                                    )) }) }]
                                                                    )) }) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    }])
                                                                }
                                                              ))
                                                           })
                                                      };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Stmt
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Expr
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Call (
                                                                   "print",
                                                                   [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.UnaryOp (
                                                                    Ast.Neg,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }]
                                                                   ))
                                                                })
                                                           })
                                                      };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Stmt
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Expr
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Assign (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                   ))
                                                                })
                                                           })
                                                      };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Stmt
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.If (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Greater,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0) }
                                                                   ))
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Block
                                                                   [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "col") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) }) }))
                                                                    }) }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag1")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag2")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "used") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "false")
                                                                    }) })) }
                                                                    )) })) })
                                                                    }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    }])
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Block [])
                                                                }
                                                              ))
                                                           })
                                                      }
                                                    ])
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.Block []) }
                                             ))
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "u")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Dec ((Ast.TypA (Ast.TypB, (Some 100))), "used")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Dec ((Ast.TypA (Ast.TypB, (Some 100))), "diag1")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Dec ((Ast.TypA (Ast.TypB, (Some 100))), "diag2")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 100))), "col")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "count"))
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "count") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 12) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "u") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 1) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Leq,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "u") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.AccIndex (
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "used") },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "u")
                                                             })
                                                        }
                                                      ))
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "false")
                                                        })
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "u") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "u")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "u") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 1) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Leq,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "u") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Mult,
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 2) },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "n") })
                                        }
                                      ))
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.AccIndex (
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "diag1")
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "u")
                                                             })
                                                        }
                                                      ))
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Assign (
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar
                                                                "diag2")
                                                             },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "u")
                                                                  })
                                                             }
                                                           ))
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar
                                                                "false")
                                                             })
                                                        }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "u") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "u")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Assign (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "u") },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1) }
                                      ))
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.While (
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.BinaryOp (Ast.And,
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Leq,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "i")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "n")
                                                             })
                                                        }
                                                      ))
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Neq,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "i")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 0) }
                                                      ))
                                                   }
                                                 ))
                                              },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Block
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Stmt
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.While (
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.BinaryOp (
                                                                 Ast.And,
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.BinaryOp (
                                                                    Ast.Leq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                    ))
                                                                   },
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.BinaryOp (
                                                                    Ast.Or,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Or,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "used") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) }
                                                                    )) }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag1")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                    )) })) })
                                                                    })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag2")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })) })
                                                                    }))
                                                                   }
                                                                 ))
                                                              },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Expr
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    ))
                                                                   })
                                                              }
                                                            ))
                                                         })
                                                    };
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Stmt
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.If (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.BinaryOp (
                                                                  Ast.Leq,
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                  ))
                                                               },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Block
                                                                  [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "col") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) }
                                                                    )) }) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag1")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag2")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "used") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "true") })
                                                                    })) })) }
                                                                    )) }) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) })
                                                                    }) }])
                                                               },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Block
                                                                  [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.If (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Greater,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "col") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) }) }))
                                                                    }) }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag1")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag2")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "used") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "false")
                                                                    }) })) }
                                                                    )) })) })
                                                                    }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    }]) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []) })) })
                                                                    }])
                                                               }
                                                             ))
                                                          })
                                                     }
                                                   ])
                                              }
                                            ))
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.If (
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Greater,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i") })
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "n") })
                                                    }
                                                  ))
                                               },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Block
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Stmt
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Expr
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Assign (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "count")
                                                                    },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "count")
                                                                    }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                  ))
                                                               })
                                                          })
                                                     };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Stmt
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Expr
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Assign (
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                   ))
                                                                })
                                                           })
                                                      };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Stmt
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.If (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Greater,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0) }
                                                                   ))
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Block
                                                                   [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "col") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) }) }))
                                                                    }) }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag1")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "diag2")
                                                                    },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "used") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "false")
                                                                    }) })) }
                                                                    )) })) })
                                                                    }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "u") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    }])
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Block [])
                                                                }
                                                              ))
                                                           })
                                                      }
                                                    ])
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.Block []) }
                                             ))
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "count") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "tail_call";
           formals = [(Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Greater,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "n") })
                                  },
                                { Ast.loc = <opaque>; node = (Ast.ILiteral 0)
                                  }
                                ))
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Call ("tail_call",
                                           [{ Ast.loc = <opaque>;
                                              node =
                                              (Ast.BinaryOp (Ast.Sub,
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "n") })
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.ILiteral 1) }
                                                 ))
                                              }
                                             ]
                                           ))
                                        }))
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 17) }))
                             }
                           ))
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("tail_call",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 10) }
                                         ]
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "y")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "y") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 1889) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2020) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "y") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "y") },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Add,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "y")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 1) }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.If (
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.And,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Equal,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.BinaryOp (
                                                            Ast.Mod,
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Access
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.AccVar
                                                                    "y")
                                                                   })
                                                              },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.ILiteral 4)
                                                              }
                                                            ))
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 0) }
                                                       ))
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Or,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.BinaryOp (
                                                            Ast.Neq,
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.BinaryOp (
                                                                 Ast.Mod,
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "y") })
                                                                   },
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.ILiteral
                                                                    100)
                                                                   }
                                                                 ))
                                                              },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.ILiteral 0)
                                                              }
                                                            ))
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.BinaryOp (
                                                            Ast.Equal,
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.BinaryOp (
                                                                 Ast.Mod,
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "y") })
                                                                   },
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.ILiteral
                                                                    400)
                                                                   }
                                                                 ))
                                                              },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.ILiteral 0)
                                                              }
                                                            ))
                                                         }
                                                       ))
                                                    }
                                                  ))
                                               },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Expr
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Call ("print",
                                                       [{ Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "y")
                                                               })
                                                          }
                                                         ]
                                                       ))
                                                    })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.Block []) }
                                             ))
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "r")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 36) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("sqrt",
                                        [{ Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "n") })
                                           }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "sqrt"; formals = [(Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "r") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Mult,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "r") })
                                         },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "r") })
                                         }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "n") })
                                    }
                                  ))
                               },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Expr
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Assign (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "r") },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.BinaryOp (Ast.Add,
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "r") })
                                              },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 1) }
                                            ))
                                         }
                                       ))
                                    })
                               }
                             ))
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "r") })
                                     }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "tail_call";
           formals = [(Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Neq,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "n") })
                                  },
                                { Ast.loc = <opaque>; node = (Ast.ILiteral 0)
                                  }
                                ))
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Block
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Stmt
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Expr
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Call ("print",
                                                [{ Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "n") })
                                                   }
                                                  ]
                                                ))
                                             })
                                        })
                                   };
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("tail_call",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                   ]
                                                 ))
                                              })
                                         })
                                    }
                                  ])
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 999999) }
                                       ]
                                     ))
                                  })
                             }
                           ))
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("tail_call",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5) }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Neq,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>; node = (Ast.Block []) },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Expr
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Call ("print",
                                      [{ Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1111) }
                                        ]
                                      ))
                                   })
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2222) }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "k")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "k") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "k") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 45000) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "k") },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Add,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "k")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 1) }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.If (
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Greater,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Call ("seq",
                                                       [{ Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "k")
                                                               })
                                                          }
                                                         ]
                                                       ))
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 240)
                                                    }
                                                  ))
                                               },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Block
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Stmt
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Expr
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Call (
                                                                  "print",
                                                                  [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "k") }) }
                                                                    ]
                                                                  ))
                                                               })
                                                          })
                                                     }
                                                    ])
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.Block []) }
                                             ))
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "seq"; formals = [(Ast.TypI, "i")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "count"))
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "count") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Neq,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1) }
                                  ))
                               },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccVar "count") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "count")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.If (
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Equal,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Mod,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i")
                                                               })
                                                          },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 2) }
                                                        ))
                                                     },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 0)
                                                     }
                                                   ))
                                                },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Expr
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Assign (
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "i") },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.BinaryOp (
                                                             Ast.Div,
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Access
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") })
                                                               },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.ILiteral
                                                                  2)
                                                               }
                                                             ))
                                                          }
                                                        ))
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Expr
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Assign (
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "i") },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.BinaryOp (
                                                             Ast.Add,
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.BinaryOp (
                                                                  Ast.Mult,
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    3) }
                                                                  ))
                                                               },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.ILiteral
                                                                  1)
                                                               }
                                                             ))
                                                          }
                                                        ))
                                                     })
                                                }
                                              ))
                                           })
                                      }
                                    ])
                               }
                             ))
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "count") })
                                     }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "m")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "m") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Assign (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 10) }
                                      ))
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Equal,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "m") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.If (
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.BinaryOp (Ast.Equal,
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "n") })
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.ILiteral 0) }
                                                 ))
                                              },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Expr
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Call ("print",
                                                      [{ Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1111)
                                                         }
                                                        ]
                                                      ))
                                                   })
                                              },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.Block []) }
                                            ))
                                         })
                                    }
                                   ])
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Expr
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Call ("print",
                                      [{ Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3333) }
                                        ]
                                      ))
                                   })
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "x")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "x") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 44) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Equal,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "x") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Expr
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Call ("print",
                                      [{ Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 33) }
                                        ]
                                      ))
                                   })
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Expr
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Call ("print",
                                      [{ Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 44) }
                                        ]
                                      ))
                                   })
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 1) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "ia"))
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "ia") },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0) }
                                      ))
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "ia2")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Dec ((Ast.TypP (Ast.TypA (Ast.TypI, (Some 10)))),
                       "ipa"))
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p") })
                                              })
                                         })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "ia2") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "ia") },
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 0) }
                                           ))
                                        })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "ia2")
                                                   })
                                              })
                                         })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "p") })
                                        })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 227) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p") })
                                              })
                                         })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Addr
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "i") })
                                        })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 12) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccDeref
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "p") })
                                             })
                                        })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p") })
                                              })
                                         })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccIndex (
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "ia") },
                                           { Ast.loc = <opaque>;
                                             node = (Ast.ILiteral 0) }
                                           ))
                                        })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "ia") },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0) }
                                      ))
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 14) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccIndex (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "ia") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "ia") },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 9) }
                                      ))
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 114) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccIndex (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "ia") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 9) }
                                            ))
                                         })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "ipa") },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 2) }
                                      ))
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "p") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.AccIndex (
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "ipa") },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 2) }
                                                      ))
                                                   })
                                              })
                                         })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "b")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "m")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "m") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 12) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.And,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Equal,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "m") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0) }
                                      ))
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Equal,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "n") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0) }
                                      ))
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Expr
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Call ("print",
                                      [{ Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1111) }
                                        ]
                                      ))
                                   })
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Expr
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Call ("print",
                                      [{ Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2222) }
                                        ]
                                      ))
                                   })
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "b") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Mult,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "m") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "n") })
                                        }
                                      ))
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 10))), "a")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccIndex (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a") },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1) }
                                      ))
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 117) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("f",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1) };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a") })
                                     }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "f";
            formals = [(Ast.TypI, "i"); ((Ast.TypA (Ast.TypI, None)), "a")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccIndex (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "a") },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "i") })
                                              }
                                            ))
                                         })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "y")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "y") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 1889) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2020) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "y") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "y") },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Add,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "y")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 1) }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.If (
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("leapyear",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "y") })
                                                     }
                                                    ]
                                                  ))
                                               },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Expr
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Call ("print",
                                                       [{ Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "y")
                                                               })
                                                          }
                                                         ]
                                                       ))
                                                    })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.Block []) }
                                             ))
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypB; fname = "leapyear";
            formals = [(Ast.TypI, "y")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.And,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.BinaryOp (Ast.Equal,
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.BinaryOp (Ast.Mod,
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "y") })
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.ILiteral 4) }
                                                 ))
                                              },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.BinaryOp (Ast.Or,
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.BinaryOp (Ast.Neq,
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Mod,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "y")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 100) }
                                                      ))
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.ILiteral 0) }
                                                 ))
                                              },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.BinaryOp (Ast.Equal,
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Mod,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "y")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 400) }
                                                      ))
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.ILiteral 0) }
                                                 ))
                                              }
                                            ))
                                         }
                                       ))
                                    }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 10) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i") })
                                                    }
                                                   ]
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("print",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Call ("fib",
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Access
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                })
                                                           }
                                                          ]
                                                        ))
                                                     }
                                                    ]
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "fib"; formals = [(Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.BinaryOp (Ast.Add,
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("fib",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 2) }
                                                       ))
                                                    }
                                                   ]
                                                 ))
                                              },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("fib",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                   ]
                                                 ))
                                              }
                                            ))
                                         }))
                              }
                            ))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Call ("ack",
                                      [{ Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3) };
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 4) }
                                        ]
                                      ))
                                   }
                                  ]
                                ))
                             })
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("ack",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 3) };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 7) }
                                         ]
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("ack",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 4) };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1) }
                                         ]
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "ack";
            formals = [(Ast.TypI, "m"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Equal,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "m") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Return
                                 (Some { Ast.loc = <opaque>;
                                         node =
                                         (Ast.BinaryOp (Ast.Add,
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "n") })
                                              },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 1) }
                                            ))
                                         }))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.If (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Equal,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "n") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0) }
                                      ))
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Return
                                      (Some { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("ack",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "m")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    };
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1)
                                                     }
                                                   ]
                                                 ))
                                              }))
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Return
                                      (Some { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("ack",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "m")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    };
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Call ("ack",
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Access
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "m")
                                                                })
                                                           };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.BinaryOp (
                                                               Ast.Sub,
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") })
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.ILiteral
                                                                    1)
                                                                 }
                                                               ))
                                                            }
                                                          ]
                                                        ))
                                                     }
                                                   ]
                                                 ))
                                              }))
                                   }
                                 ))
                              }
                            ))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "y")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "y") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 1889) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2020) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "y") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "y") },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Add,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "y")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 1) }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.If (
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.And,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Equal,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.BinaryOp (
                                                            Ast.Mod,
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Access
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.AccVar
                                                                    "y")
                                                                   })
                                                              },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.ILiteral 4)
                                                              }
                                                            ))
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 0) }
                                                       ))
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Or,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.BinaryOp (
                                                            Ast.Neq,
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.BinaryOp (
                                                                 Ast.Mod,
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "y") })
                                                                   },
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.ILiteral
                                                                    100)
                                                                   }
                                                                 ))
                                                              },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.ILiteral 0)
                                                              }
                                                            ))
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.BinaryOp (
                                                            Ast.Equal,
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.BinaryOp (
                                                                 Ast.Mod,
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "y") })
                                                                   },
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.ILiteral
                                                                    400)
                                                                   }
                                                                 ))
                                                              },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.ILiteral 0)
                                                              }
                                                            ))
                                                         }
                                                       ))
                                                    }
                                                  ))
                                               },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Expr
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Call ("print",
                                                       [{ Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "y")
                                                               })
                                                          }
                                                         ]
                                                       ))
                                                    })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.Block []) }
                                             ))
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i") })
                                                    }
                                                   ]
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node = (Ast.Vardec ((Ast.TypA (Ast.TypI, (Some 20))), "a")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "f")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "f") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "n") })
                                    }
                                  ))
                               },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccIndex (
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "a") },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i")
                                                              })
                                                         }
                                                       ))
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "f") })
                                                    }
                                                  ))
                                               })
                                          })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i")
                                                               })
                                                          },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1) }
                                                        ))
                                                     }
                                                   ))
                                                })
                                           })
                                      };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "f")
                                                     },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Mult,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "f")
                                                               })
                                                          },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i")
                                                               })
                                                          }
                                                        ))
                                                     }
                                                   ))
                                                })
                                           })
                                      }
                                    ])
                               }
                             ))
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printarr",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "n") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "a") })
                                      }
                                    ]
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printarr";
            formals = [(Ast.TypI, "len"); ((Ast.TypA (Ast.TypI, None)), "a")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.While (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Less,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "len") })
                                    }
                                  ))
                               },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("print",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccIndex (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "a")
                                                               },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Access
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") })
                                                               }
                                                             ))
                                                          })
                                                     }
                                                    ]
                                                  ))
                                               })
                                          })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Assign (
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     },
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Add,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "i")
                                                               })
                                                          },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1) }
                                                        ))
                                                     }
                                                   ))
                                                })
                                           })
                                      }
                                    ])
                               }
                             ))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "r")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 6) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "r") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node = (Ast.Dec (Ast.TypI, "r")) };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Call ("square",
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n")
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Addr
                                                    { Ast.loc = <opaque>;
                                                      node = (Ast.AccVar "r")
                                                      })
                                                 }
                                               ]
                                             ))
                                          })
                                     })
                                };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Call ("print",
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "r")
                                                     })
                                                }
                                               ]
                                             ))
                                          })
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "r") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "square";
            formals = [(Ast.TypI, "i"); ((Ast.TypP Ast.TypI), "rp")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "rp") })
                                        })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Mult,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "i") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "i") })
                                        }
                                      ))
                                   }
                                 ))
                              })
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.Dec (Ast.TypI, "n")) };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("fac",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "i") })
                                                     };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Addr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "n") })
                                                      }
                                                    ]
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("print",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "n") })
                                                     }
                                                    ]
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "n") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "fac";
            formals = [(Ast.TypI, "n"); ((Ast.TypP Ast.TypI), "res")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Equal,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Expr
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Assign (
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccDeref
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "res") })
                                             })
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1) }
                                      ))
                                   })
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.Dec (Ast.TypI, "tmp")) };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("fac",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Sub,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "n")
                                                               })
                                                          },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1) }
                                                        ))
                                                     };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Addr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "tmp")
                                                           })
                                                      }
                                                    ]
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccDeref
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "res")
                                                              })
                                                         })
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Mult,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "tmp")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n")
                                                              })
                                                         }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Access
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "true") })
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "i") },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Add,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "i")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 1) }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 999999) }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 20000000) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "i") },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Sub,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "i")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 1) }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "r")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("fac",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Addr
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "r") })
                                     }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "r") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "fac";
            formals = [(Ast.TypI, "n"); ((Ast.TypP Ast.TypI), "res")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Equal,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Expr
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Assign (
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccDeref
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "res") })
                                             })
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1) }
                                      ))
                                   })
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.Dec (Ast.TypI, "tmp")) };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("fac",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.BinaryOp (Ast.Sub,
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "n")
                                                               })
                                                          },
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.ILiteral 1) }
                                                        ))
                                                     };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Addr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "tmp")
                                                           })
                                                      }
                                                    ]
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.AccDeref
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "res")
                                                              })
                                                         })
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Mult,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar
                                                                 "tmp")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n")
                                                              })
                                                         }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fib"; formals = [(Ast.TypI, "x")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Less,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "x") })
                                  },
                                { Ast.loc = <opaque>; node = (Ast.ILiteral 2)
                                  }
                                ))
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Return
                                (Some { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1) }))
                             },
                           { Ast.loc = <opaque>; node = (Ast.Block []) }))
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x") })
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 1) }
                                                  ))
                                               }
                                              ]
                                            ))
                                         },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Call ("fib",
                                            [{ Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "x") })
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 2) }
                                                  ))
                                               }
                                              ]
                                            ))
                                         }
                                       ))
                                    }))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("fib",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 0) }
                                         ]
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1) }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 2) }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3) }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 4) }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("fib",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 5) }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 5) }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    ])) })
                                                                })
                                                           }
                                                          ])
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42) }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>; node = (Ast.Block [])
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 5) }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "print",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    ])) })
                                                                })
                                                           };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) })
                                                                 })
                                                            }
                                                          ])
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node = (Ast.Block []) })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42) }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "b") })
                                        }
                                      ))
                                   }))
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "a") },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 39) };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3) }
                                         ]
                                       ))
                                    }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a") })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "fun";
           formals = [(Ast.TypI, "x"); (Ast.TypI, "y")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }))
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("fun",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Assign (
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i") },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) }
                                        ))
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Assign (
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "i") },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Add,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 1) }
                                              ))
                                           }
                                         ))
                                      }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i") })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printem";
           formals =
           [(Ast.TypI, "a"); (Ast.TypI, "b"); (Ast.TypI, "c");
             (Ast.TypI, "d")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a") })
                                   }
                                  ]
                                ))
                             })
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "c") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "d") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("printem",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42) };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 17) };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 192) };
                                   { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 8) }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "add";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "c")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "c") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "b") })
                                        }
                                      ))
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "c") })
                                    }))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "d")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "d") },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("add",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 52) };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 10) }
                                         ]
                                       ))
                                    }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "d") })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [(Ast.TypI, "a")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Return
                           (Some { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a") })
                                   }))
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "foo"; formals = [];
           body = { Ast.loc = <opaque>; node = (Ast.Block []) } })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "bar";
            formals = [(Ast.TypI, "a"); (Ast.TypB, "b"); (Ast.TypI, "c")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "a") })
                                         },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "c") })
                                         }
                                       ))
                                    }))
                         })
                    }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("bar",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 17) };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "false") })
                                           };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 25) }
                                         ]
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "foo"; formals = [(Ast.TypI, "c")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "c") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42) }
                                      ))
                                   }
                                 ))
                              })
                         })
                    }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("foo",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 73) }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a") })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "foo"; formals = [(Ast.TypI, "a")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 3) }
                                      ))
                                   }
                                  ]
                                ))
                             })
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("foo",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 40) }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "gcd";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.While (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Neq,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a") })
                                  },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "b") })
                                  }
                                ))
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Block
                                [{ Ast.loc = <opaque>;
                                   node =
                                   (Ast.Stmt
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.If (
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.BinaryOp (Ast.Greater,
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a") })
                                                  },
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b") })
                                                  }
                                                ))
                                             },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "a") },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a")
                                                                 })
                                                            },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b")
                                                                 })
                                                            }
                                                          ))
                                                       }
                                                     ))
                                                  })
                                             },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Expr
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Assign (
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "b") },
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.BinaryOp (
                                                          Ast.Sub,
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "b")
                                                                 })
                                                            },
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Access
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "a")
                                                                 })
                                                            }
                                                          ))
                                                       }
                                                     ))
                                                  })
                                             }
                                           ))
                                        })
                                   }
                                  ])
                             }
                           ))
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a") })
                                    }))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("gcd",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 14) }
                                         ]
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 3) };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 15) }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 99) };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 121) }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "gcd";
           formals = [(Ast.TypI, "a"); (Ast.TypI, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.While (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.BinaryOp (Ast.Neq,
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "a") })
                                  },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Access
                                     { Ast.loc = <opaque>;
                                       node = (Ast.AccVar "b") })
                                  }
                                ))
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.If (
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.BinaryOp (Ast.Greater,
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "a") })
                                       },
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "b") })
                                       }
                                     ))
                                  },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Expr
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Assign (
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "a") },
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.BinaryOp (Ast.Sub,
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Access
                                                    { Ast.loc = <opaque>;
                                                      node = (Ast.AccVar "a")
                                                      })
                                                 },
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Access
                                                    { Ast.loc = <opaque>;
                                                      node = (Ast.AccVar "b")
                                                      })
                                                 }
                                               ))
                                            }
                                          ))
                                       })
                                  },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Expr
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Assign (
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "b") },
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.BinaryOp (Ast.Sub,
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Access
                                                    { Ast.loc = <opaque>;
                                                      node = (Ast.AccVar "b")
                                                      })
                                                 },
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Access
                                                    { Ast.loc = <opaque>;
                                                      node = (Ast.AccVar "a")
                                                      })
                                                 }
                                               ))
                                            }
                                          ))
                                       })
                                  }
                                ))
                             }
                           ))
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a") })
                                    }))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("gcd",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 14) };
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 21) }
                                         ]
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 8) };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 36) }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("gcd",
                                        [{ Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 99) };
                                          { Ast.loc = <opaque>;
                                            node = (Ast.ILiteral 121) }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")) };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "b")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printa"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printb"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "b") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "incab"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1) }
                                      ))
                                   }
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b") },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "b") })
                                         },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }
                                       ))
                                    }
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42) }
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "b") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 21) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])) })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])) })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("incab", [])) })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printa", [])) })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node = (Ast.Call ("printb", [])) })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "i")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Add,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "i")) };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypB, "b")) };
     { Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "j")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42) }
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "j") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Add,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "j") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "i")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "incr"; formals = [(Ast.TypI, "i")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") })
                                         },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }
                                       ))
                                    }))
                         })
                    }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2) }
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("incr",
                                        [{ Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "i") })
                                           }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i") })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Call ("print",
                                [{ Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42) }
                                  ]
                                ))
                             })
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 71) }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1) }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Access
                                { Ast.loc = <opaque>;
                                  node = (Ast.AccVar "true") })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42) }
                                       ]
                                     ))
                                  })
                             },
                           { Ast.loc = <opaque>; node = (Ast.Block []) }))
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17) }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Access
                                { Ast.loc = <opaque>;
                                  node = (Ast.AccVar "true") })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42) }
                                       ]
                                     ))
                                  })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 8) }
                                       ]
                                     ))
                                  })
                             }
                           ))
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17) }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Access
                                { Ast.loc = <opaque>;
                                  node = (Ast.AccVar "false") })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42) }
                                       ]
                                     ))
                                  })
                             },
                           { Ast.loc = <opaque>; node = (Ast.Block []) }))
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17) }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Access
                                { Ast.loc = <opaque>;
                                  node = (Ast.AccVar "false") })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42) }
                                       ]
                                     ))
                                  })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 8) }
                                       ]
                                     ))
                                  })
                             }
                           ))
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 17) }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "cond"; formals = [(Ast.TypB, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "x")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Access
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "b") })
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Expr
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Assign (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "x") },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42) }
                                      ))
                                   })
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Expr
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Assign (
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "x") },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 17) }
                                      ))
                                   })
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "x") })
                                    }))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("cond",
                                       [{ Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "true") })
                                          }
                                         ]
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Call ("cond",
                                        [{ Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "false") })
                                           }
                                          ]
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "foo"; formals = [(Ast.TypI, "i")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Assign (
                                { Ast.loc = <opaque>; node = (Ast.AccVar "i")
                                  },
                                { Ast.loc = <opaque>;
                                  node = (Ast.ILiteral 42) }
                                ))
                             })
                        })
                   };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") })
                                         },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") })
                                         }
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("foo",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10) }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo";
           formals = [(Ast.TypI, "a"); (Ast.TypB, "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "c")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypB, "d")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "c") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "c") })
                                         },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 10) }
                                       ))
                                    }))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("foo",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 37) };
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "false") })
                                           }
                                         ]
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printb";
           formals = [(Ast.TypB, "val")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Access
                                { Ast.loc = <opaque>;
                                  node = (Ast.AccVar "val") })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1) }
                                       ]
                                     ))
                                  })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0) }
                                       ]
                                     ))
                                  })
                             }
                           ))
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2) }
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Sub,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Mult,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Div,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 100) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 99) }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Equal,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Equal,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 99) }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Neq,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Neq,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 99) }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Less,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Less,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 99) }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Leq,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Leq,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Leq,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 99) }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Greater,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Greater,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 99) }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Geq,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Geq,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Geq,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 2) },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "printb";
           formals = [(Ast.TypB, "val")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.If (
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Access
                                { Ast.loc = <opaque>;
                                  node = (Ast.AccVar "val") })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1) }
                                       ]
                                     ))
                                  })
                             },
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Expr
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.Call ("print",
                                     [{ Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 0) }
                                       ]
                                     ))
                                  })
                             }
                           ))
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("printb",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "true") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "false") })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.And,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "true") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "true") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.And,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "true") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "false") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.And,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "false") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "true") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.And,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "false") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "false") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Or,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "true") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "true") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Or,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "true") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "false") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Or,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "false") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "true") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Or,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "false") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "false") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.UnaryOp (Ast.Not,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "false") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printb",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.UnaryOp (Ast.Not,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "true") })
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.UnaryOp (Ast.Neg,
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 10) }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.UnaryOp (Ast.Neg,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.UnaryOp (Ast.Neg,
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 42) }
                                             ))
                                          }
                                        ))
                                     }
                                    ]
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p") })
                                              })
                                         })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypP Ast.TypI), "p")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "p") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Addr
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "p") })
                                        })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.AccDeref
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Access
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.AccVar "p") })
                                                  })
                                             })
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 2) }
                                      ))
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccDeref
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "p") })
                                              })
                                         })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "double";
           formals = [((Ast.TypP Ast.TypI), "i")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>;
                   node =
                   (Ast.Stmt
                      { Ast.loc = <opaque>;
                        node =
                        (Ast.Expr
                           { Ast.loc = <opaque>;
                             node =
                             (Ast.Assign (
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.AccDeref
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node = (Ast.AccVar "i") })
                                       })
                                  },
                                { Ast.loc = <opaque>;
                                  node =
                                  (Ast.BinaryOp (Ast.Mult,
                                     { Ast.loc = <opaque>;
                                       node =
                                       (Ast.Access
                                          { Ast.loc = <opaque>;
                                            node =
                                            (Ast.AccDeref
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Access
                                                    { Ast.loc = <opaque>;
                                                      node = (Ast.AccVar "i")
                                                      })
                                                 })
                                            })
                                       },
                                     { Ast.loc = <opaque>;
                                       node = (Ast.ILiteral 2) }
                                     ))
                                  }
                                ))
                             })
                        })
                   }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 2) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i") })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("double",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Addr
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i") })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "i") })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 2) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i") })
                                                    }
                                                   ]
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Return
                                             (Some { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "i") })
                                                     }))
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 1) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 10) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.If (
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.BinaryOp (Ast.Equal,
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Mod,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "i")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 2) }
                                                      ))
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.ILiteral 0) }
                                                 ))
                                              },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Return
                                                 (Some { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i")
                                                              })
                                                         }))
                                              },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.Block []) }
                                            ))
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("print",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "i") })
                                                     }
                                                    ]
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "insertionSort";
           formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "key")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "j")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 1) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n") })
                                               }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Block
                                                        [{ Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Stmt
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Expr
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) }) }))
                                                                    })
                                                                })
                                                           };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) })
                                                                 })
                                                            };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.While (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.And,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Geq,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Greater,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) }
                                                                    )) }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key") })
                                                                    })) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) }
                                                                    )) }) }))
                                                                    }) }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    }]) }))
                                                                 })
                                                            };
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "key") })
                                                                    })) })
                                                                 })
                                                            }
                                                          ])
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0) }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n")
                                                     })
                                                }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })
                                                                 }
                                                                ]
                                                              ))
                                                           })
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 5))), "arr"))
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 12) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 11) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 13) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("insertionSort",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5) }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 5) }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "swap";
           formals = [((Ast.TypP Ast.TypI), "a"); ((Ast.TypP Ast.TypI), "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "t")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "t") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccDeref
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "a") })
                                             })
                                        })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a") })
                                        })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccDeref
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "b") })
                                             })
                                        })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "b") })
                                        })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "t") })
                                   }
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "partition";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "low");
              (Ast.TypI, "high")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "pivot"))
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "pivot") },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.AccIndex (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "arr") },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "high")
                                                   })
                                              }
                                            ))
                                         })
                                    }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "i") },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Sub,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "low") })
                                         },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }
                                       ))
                                    }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "j")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "j") },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "low")
                                                    })
                                               }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Leq,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "j")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.BinaryOp (Ast.Sub,
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "high")
                                                          })
                                                     },
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.ILiteral 1)
                                                     }
                                                   ))
                                                }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Block
                                                         [{ Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.If (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Less,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) }
                                                                    )) }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "pivot")
                                                                    }) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Assign (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                    )) }) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Stmt
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "swap",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Addr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Addr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) }
                                                                    )) }) }]
                                                                    )) }) })
                                                                    }]) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Block
                                                                    []) }))
                                                                 })
                                                            }
                                                           ])
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "j")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("swap",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Addr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.AccIndex (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "arr") },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Add,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i") })
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 1) }
                                                  ))
                                               }
                                             ))
                                          })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Addr
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.AccIndex (
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "arr") },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "high") })
                                                }
                                              ))
                                           })
                                      }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node =
                                     (Ast.BinaryOp (Ast.Add,
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Access
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") })
                                          },
                                        { Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 1) }
                                        ))
                                     }))
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "quickSort";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "low");
              (Ast.TypI, "high")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "low") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "high") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.Dec (Ast.TypI, "pi")) };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "pi")
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Call ("partition",
                                                       [{ Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Access
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "arr")
                                                               })
                                                          };
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Access
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "low")
                                                                })
                                                           };
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Access
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "high")
                                                                })
                                                           }
                                                         ]
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("quickSort",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "arr")
                                                          })
                                                     };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Access
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "low")
                                                           })
                                                      };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.BinaryOp (Ast.Sub,
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Access
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "pi")
                                                                })
                                                           },
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.ILiteral 1) }
                                                         ))
                                                      }
                                                    ]
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("quickSort",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "arr")
                                                          })
                                                     };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.BinaryOp (Ast.Add,
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Access
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "pi")
                                                                })
                                                           },
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.ILiteral 1) }
                                                         ))
                                                      };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Access
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "high")
                                                           })
                                                      }
                                                    ]
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              },
                            { Ast.loc = <opaque>; node = (Ast.Block []) }))
                         })
                    }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "size")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0) }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "size") })
                                                }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })
                                                                 }
                                                                ]
                                                              ))
                                                           })
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"))
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 10) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 8) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 9) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 1) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("quickSort",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 0) };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.BinaryOp (Ast.Sub,
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node = (Ast.AccVar "n") })
                                           },
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1) }
                                         ))
                                      }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n") })
                                      }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "merge";
           formals =
           [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "l");
             (Ast.TypI, "m"); (Ast.TypI, "r")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "j")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "k")) };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n1")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n1") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.BinaryOp (Ast.Sub,
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "m") })
                                             },
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "l") })
                                             }
                                           ))
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 1) }
                                      ))
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n2")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "n2") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Sub,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "r") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "m") })
                                        }
                                      ))
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "L")) };
                  { Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "R")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "i") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n1")
                                                    })
                                               }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Assign (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccIndex (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "L") },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                  ))
                                                               },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Access
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "l") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })) })
                                                               }
                                                             ))
                                                          })
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "i")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Block
                            [{ Ast.loc = <opaque>;
                               node =
                               (Ast.Stmt
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Expr
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Assign (
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "j") },
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 0) }
                                            ))
                                         })
                                    })
                               };
                              { Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.While (
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.BinaryOp (Ast.Less,
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "j") })
                                               },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Access
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "n2")
                                                    })
                                               }
                                             ))
                                          },
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Block
                                             [{ Ast.loc = <opaque>;
                                                node =
                                                (Ast.Stmt
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Expr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Assign (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccIndex (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "R") },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) }
                                                                  ))
                                                               },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Access
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "m") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) }
                                                                    )) })) })
                                                               }
                                                             ))
                                                          })
                                                     })
                                                };
                                               { Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Assign (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "j")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.BinaryOp (
                                                                   Ast.Add,
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }
                                                                   ))
                                                                }
                                                              ))
                                                           })
                                                      })
                                                 }
                                               ])
                                          }
                                        ))
                                     })
                                }
                              ])
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "j") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "k") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "l") })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.And,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Less,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "i") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "n1") })
                                        }
                                      ))
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Less,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "j") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "n2") })
                                        }
                                      ))
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.If (
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.BinaryOp (Ast.Leq,
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "L")
                                                             },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "i")
                                                                  })
                                                             }
                                                           ))
                                                        })
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "R")
                                                             },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "j")
                                                                  })
                                                             }
                                                           ))
                                                        })
                                                   }
                                                 ))
                                              },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Block
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Stmt
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Expr
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Assign (
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "k") }) }
                                                                    ))
                                                                   },
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "L") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })
                                                                   }
                                                                 ))
                                                              })
                                                         })
                                                    };
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Stmt
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Expr
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Assign (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                  ))
                                                               })
                                                          })
                                                     }
                                                   ])
                                              },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Block
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Stmt
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Expr
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.Assign (
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "k") }) }
                                                                    ))
                                                                   },
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "R") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) }
                                                                    )) })
                                                                   }
                                                                 ))
                                                              })
                                                         })
                                                    };
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Stmt
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.Expr
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Assign (
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") },
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "j") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) })) }
                                                                  ))
                                                               })
                                                          })
                                                     }
                                                   ])
                                              }
                                            ))
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "k") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "k")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n1") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.AccIndex (
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "arr") },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "k")
                                                             })
                                                        }
                                                      ))
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "L")
                                                             },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "i")
                                                                  })
                                                             }
                                                           ))
                                                        })
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "k") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "k")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "j") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "n2") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.AccIndex (
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "arr") },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "k")
                                                             })
                                                        }
                                                      ))
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccIndex (
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "R")
                                                             },
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Access
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.AccVar
                                                                    "j")
                                                                  })
                                                             }
                                                           ))
                                                        })
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "j") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "j")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "k") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "k")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "mergeSort";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "l");
              (Ast.TypI, "r")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.If (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Less,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "l") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "r") })
                                   }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.Dec (Ast.TypI, "m")) };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "m") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Add,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "l")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.BinaryOp (
                                                            Ast.Div,
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.BinaryOp (
                                                                 Ast.Sub,
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "r") })
                                                                   },
                                                                 { Ast.loc =
                                                                   <opaque>;
                                                                   node =
                                                                   (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "l") })
                                                                   }
                                                                 ))
                                                              },
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.ILiteral 2)
                                                              }
                                                            ))
                                                         }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("mergeSort",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "arr")
                                                          })
                                                     };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Access
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "l") })
                                                      };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Access
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "m") })
                                                      }
                                                    ]
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("mergeSort",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "arr")
                                                          })
                                                     };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.BinaryOp (Ast.Add,
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Access
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "m")
                                                                })
                                                           },
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.ILiteral 1) }
                                                         ))
                                                      };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Access
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "r") })
                                                      }
                                                    ]
                                                  ))
                                               })
                                          })
                                     };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("merge",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Access
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccVar "arr")
                                                          })
                                                     };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Access
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "l") })
                                                      };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Access
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "m") })
                                                      };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Access
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "r") })
                                                      }
                                                    ]
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              },
                            { Ast.loc = <opaque>; node = (Ast.Block []) }))
                         })
                    }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "A"); (Ast.TypI, "size")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0) }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.AccVar "size") })
                                                }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "A") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })
                                                                 }
                                                                ]
                                                              ))
                                                           })
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"))
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 12) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 11) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 13) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node = (Ast.Dec (Ast.TypI, "arr_size")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "arr_size") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("mergeSort",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node = (Ast.ILiteral 0) };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.BinaryOp (Ast.Sub,
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Access
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.AccVar "arr_size") })
                                           },
                                         { Ast.loc = <opaque>;
                                           node = (Ast.ILiteral 1) }
                                         ))
                                      }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "arr_size") })
                                      }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypV; fname = "swap";
           formals = [((Ast.TypP Ast.TypI), "a"); ((Ast.TypP Ast.TypI), "b")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "t")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "t") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccDeref
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "a") })
                                             })
                                        })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "a") })
                                        })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.AccDeref
                                           { Ast.loc = <opaque>;
                                             node =
                                             (Ast.Access
                                                { Ast.loc = <opaque>;
                                                  node = (Ast.AccVar "b") })
                                             })
                                        })
                                   }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.AccDeref
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "b") })
                                        })
                                   },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "t") })
                                   }
                                 ))
                              })
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "heapify";
            formals =
            [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n");
              (Ast.TypI, "i")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec (Ast.TypI, "largest")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "largest") },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "l")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "l") },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.BinaryOp (Ast.Mult,
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 2) },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "i") })
                                              }
                                            ))
                                         },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }
                                       ))
                                    }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "r")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "r") },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Add,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.BinaryOp (Ast.Mult,
                                            { Ast.loc = <opaque>;
                                              node = (Ast.ILiteral 2) },
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Access
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "i") })
                                              }
                                            ))
                                         },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2) }
                                       ))
                                    }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.If (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.And,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Less,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "l") })
                                         },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "n") })
                                         }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Greater,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.AccIndex (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "arr")
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "l") })
                                                   }
                                                 ))
                                              })
                                         },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.AccIndex (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "arr")
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "largest")
                                                        })
                                                   }
                                                 ))
                                              })
                                         }
                                       ))
                                    }
                                  ))
                               },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Expr
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Assign (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "largest") },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "l") })
                                         }
                                       ))
                                    })
                               },
                             { Ast.loc = <opaque>; node = (Ast.Block []) }))
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.If (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.And,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Less,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "r") })
                                         },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "n") })
                                         }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.BinaryOp (Ast.Greater,
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.AccIndex (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "arr")
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "r") })
                                                   }
                                                 ))
                                              })
                                         },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.AccIndex (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "arr")
                                                   },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.Access
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.AccVar "largest")
                                                        })
                                                   }
                                                 ))
                                              })
                                         }
                                       ))
                                    }
                                  ))
                               },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Expr
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Assign (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "largest") },
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Access
                                            { Ast.loc = <opaque>;
                                              node = (Ast.AccVar "r") })
                                         }
                                       ))
                                    })
                               },
                             { Ast.loc = <opaque>; node = (Ast.Block []) }))
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.If (
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.BinaryOp (Ast.Neq,
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "largest") })
                                    },
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "i") })
                                    }
                                  ))
                               },
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Block
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Call ("swap",
                                                  [{ Ast.loc = <opaque>;
                                                     node =
                                                     (Ast.Addr
                                                        { Ast.loc = <opaque>;
                                                          node =
                                                          (Ast.AccIndex (
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.AccVar
                                                                  "arr")
                                                               },
                                                             { Ast.loc =
                                                               <opaque>;
                                                               node =
                                                               (Ast.Access
                                                                  { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") })
                                                               }
                                                             ))
                                                          })
                                                     };
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Addr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccIndex (
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.AccVar
                                                                   "arr")
                                                                },
                                                              { Ast.loc =
                                                                <opaque>;
                                                                node =
                                                                (Ast.Access
                                                                   { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "largest")
                                                                    })
                                                                }
                                                              ))
                                                           })
                                                      }
                                                    ]
                                                  ))
                                               })
                                          })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Stmt
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Expr
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Call ("heapify",
                                                   [{ Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Access
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.AccVar "arr")
                                                           })
                                                      };
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Access
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.AccVar "n")
                                                            })
                                                       };
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Access
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.AccVar
                                                               "largest")
                                                            })
                                                       }
                                                     ]
                                                   ))
                                                })
                                           })
                                      }
                                    ])
                               },
                             { Ast.loc = <opaque>; node = (Ast.Block []) }))
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "heapSort";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Div,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "n")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 2) }
                                                       ))
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 1) }
                                                  ))
                                               }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Geq,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 0) }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "heapify",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") })
                                                                 };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "n") })
                                                                  };
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") })
                                                                  }
                                                                ]
                                                              ))
                                                           })
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.BinaryOp (Ast.Sub,
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "n") })
                                                    },
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.ILiteral 1) }
                                                  ))
                                               }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Greater,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node = (Ast.ILiteral 0) }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Block
                                                         [{ Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Stmt
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "swap",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Addr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0) })) })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Addr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) }) }]
                                                                    )) })
                                                                 })
                                                            };
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.Stmt
                                                                { Ast.loc =
                                                                  <opaque>;
                                                                  node =
                                                                  (Ast.Expr
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Call (
                                                                    "heapify",
                                                                    [{ Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") })
                                                                    };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) };
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    0) }])) })
                                                                  })
                                                             }
                                                           ])
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Sub,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "printArray";
            formals = [((Ast.TypA (Ast.TypI, None)), "arr"); (Ast.TypI, "n")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Block
                             [{ Ast.loc = <opaque>;
                                node =
                                (Ast.Stmt
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Expr
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Assign (
                                             { Ast.loc = <opaque>;
                                               node = (Ast.AccVar "i") },
                                             { Ast.loc = <opaque>;
                                               node = (Ast.ILiteral 0) }
                                             ))
                                          })
                                     })
                                };
                               { Ast.loc = <opaque>;
                                 node =
                                 (Ast.Stmt
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.While (
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.BinaryOp (Ast.Less,
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "i")
                                                     })
                                                },
                                              { Ast.loc = <opaque>;
                                                node =
                                                (Ast.Access
                                                   { Ast.loc = <opaque>;
                                                     node = (Ast.AccVar "n")
                                                     })
                                                }
                                              ))
                                           },
                                         { Ast.loc = <opaque>;
                                           node =
                                           (Ast.Block
                                              [{ Ast.loc = <opaque>;
                                                 node =
                                                 (Ast.Stmt
                                                    { Ast.loc = <opaque>;
                                                      node =
                                                      (Ast.Expr
                                                         { Ast.loc = <opaque>;
                                                           node =
                                                           (Ast.Call (
                                                              "print",
                                                              [{ Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccIndex (
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "arr") },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) }
                                                                    )) })
                                                                 }
                                                                ]
                                                              ))
                                                           })
                                                      })
                                                 };
                                                { Ast.loc = <opaque>;
                                                  node =
                                                  (Ast.Stmt
                                                     { Ast.loc = <opaque>;
                                                       node =
                                                       (Ast.Expr
                                                          { Ast.loc =
                                                            <opaque>;
                                                            node =
                                                            (Ast.Assign (
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.AccVar
                                                                    "i")
                                                                 },
                                                               { Ast.loc =
                                                                 <opaque>;
                                                                 node =
                                                                 (Ast.BinaryOp (
                                                                    Ast.Add,
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.Access
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.AccVar
                                                                    "i") }) },
                                                                    { Ast.loc =
                                                                    <opaque>;
                                                                    node =
                                                                    (
                                                                    Ast.ILiteral
                                                                    1) }))
                                                                 }
                                                               ))
                                                            })
                                                       })
                                                  }
                                                ])
                                           }
                                         ))
                                      })
                                 }
                               ])
                          })
                     }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node = (Ast.Dec ((Ast.TypA (Ast.TypI, (Some 6))), "arr"))
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 0) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 12) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 1) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 11) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 2) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 13) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 3) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 5) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 4) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node =
                                    (Ast.AccIndex (
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "arr") },
                                       { Ast.loc = <opaque>;
                                         node = (Ast.ILiteral 5) }
                                       ))
                                    },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 7) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "n")) };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Assign (
                                  { Ast.loc = <opaque>;
                                    node = (Ast.AccVar "n") },
                                  { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 6) }
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("heapSort",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n") })
                                      }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("printArray",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "arr") })
                                     };
                                    { Ast.loc = <opaque>;
                                      node =
                                      (Ast.Access
                                         { Ast.loc = <opaque>;
                                           node = (Ast.AccVar "n") })
                                      }
                                    ]
                                  ))
                               })
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "a")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 42) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "a") })
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>; node = (Ast.Vardec (Ast.TypI, "a")) };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypV; fname = "foo"; formals = [(Ast.TypI, "c")];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "a") },
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.BinaryOp (Ast.Add,
                                      { Ast.loc = <opaque>;
                                        node =
                                        (Ast.Access
                                           { Ast.loc = <opaque>;
                                             node = (Ast.AccVar "c") })
                                        },
                                      { Ast.loc = <opaque>;
                                        node = (Ast.ILiteral 42) }
                                      ))
                                   }
                                 ))
                              })
                         })
                    }
                   ])
              }
            })
       };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("foo",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 73) }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Expr
                             { Ast.loc = <opaque>;
                               node =
                               (Ast.Call ("print",
                                  [{ Ast.loc = <opaque>;
                                     node =
                                     (Ast.Access
                                        { Ast.loc = <opaque>;
                                          node = (Ast.AccVar "a") })
                                     }
                                    ]
                                  ))
                               })
                          })
                     };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "main"; formals = [];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "i")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "i") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 5) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "i") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Call ("print",
                                                 [{ Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.Access
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.AccVar "i") })
                                                    }
                                                   ]
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "i") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "i")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 42) }
                                   ]
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node = (Ast.ILiteral 0) }))
                         })
                    }
                  ])
             }
           })
      }
     ])
Parsing succeded!

(Ast.Prog
   [{ Ast.loc = <opaque>;
      node =
      (Ast.Fundecl
         { Ast.typ = Ast.TypI; fname = "foo"; formals = [(Ast.TypI, "a")];
           body =
           { Ast.loc = <opaque>;
             node =
             (Ast.Block
                [{ Ast.loc = <opaque>; node = (Ast.Dec (Ast.TypI, "j")) };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Assign (
                                 { Ast.loc = <opaque>;
                                   node = (Ast.AccVar "j") },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              })
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.While (
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.BinaryOp (Ast.Greater,
                                 { Ast.loc = <opaque>;
                                   node =
                                   (Ast.Access
                                      { Ast.loc = <opaque>;
                                        node = (Ast.AccVar "a") })
                                   },
                                 { Ast.loc = <opaque>;
                                   node = (Ast.ILiteral 0) }
                                 ))
                              },
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Block
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Stmt
                                       { Ast.loc = <opaque>;
                                         node =
                                         (Ast.Expr
                                            { Ast.loc = <opaque>;
                                              node =
                                              (Ast.Assign (
                                                 { Ast.loc = <opaque>;
                                                   node = (Ast.AccVar "j") },
                                                 { Ast.loc = <opaque>;
                                                   node =
                                                   (Ast.BinaryOp (Ast.Add,
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.Access
                                                           { Ast.loc =
                                                             <opaque>;
                                                             node =
                                                             (Ast.AccVar "j")
                                                             })
                                                        },
                                                      { Ast.loc = <opaque>;
                                                        node =
                                                        (Ast.ILiteral 2) }
                                                      ))
                                                   }
                                                 ))
                                              })
                                         })
                                    };
                                   { Ast.loc = <opaque>;
                                     node =
                                     (Ast.Stmt
                                        { Ast.loc = <opaque>;
                                          node =
                                          (Ast.Expr
                                             { Ast.loc = <opaque>;
                                               node =
                                               (Ast.Assign (
                                                  { Ast.loc = <opaque>;
                                                    node = (Ast.AccVar "a") },
                                                  { Ast.loc = <opaque>;
                                                    node =
                                                    (Ast.BinaryOp (Ast.Sub,
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.Access
                                                            { Ast.loc =
                                                              <opaque>;
                                                              node =
                                                              (Ast.AccVar "a")
                                                              })
                                                         },
                                                       { Ast.loc = <opaque>;
                                                         node =
                                                         (Ast.ILiteral 1) }
                                                       ))
                                                    }
                                                  ))
                                               })
                                          })
                                     }
                                   ])
                              }
                            ))
                         })
                    };
                  { Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Return
                            (Some { Ast.loc = <opaque>;
                                    node =
                                    (Ast.Access
                                       { Ast.loc = <opaque>;
                                         node = (Ast.AccVar "j") })
                                    }))
                         })
                    }
                  ])
             }
           })
      };
     { Ast.loc = <opaque>;
       node =
       (Ast.Fundecl
          { Ast.typ = Ast.TypI; fname = "main"; formals = [];
            body =
            { Ast.loc = <opaque>;
              node =
              (Ast.Block
                 [{ Ast.loc = <opaque>;
                    node =
                    (Ast.Stmt
                       { Ast.loc = <opaque>;
                         node =
                         (Ast.Expr
                            { Ast.loc = <opaque>;
                              node =
                              (Ast.Call ("print",
                                 [{ Ast.loc = <opaque>;
                                    node =
                                    (Ast.Call ("foo",
                                       [{ Ast.loc = <opaque>;
                                          node = (Ast.ILiteral 7) }
                                         ]
                                       ))
                                    }
                                   ]
                                 ))
                              })
                         })
                    };
                   { Ast.loc = <opaque>;
                     node =
                     (Ast.Stmt
                        { Ast.loc = <opaque>;
                          node =
                          (Ast.Return
                             (Some { Ast.loc = <opaque>;
                                     node = (Ast.ILiteral 0) }))
                          })
                     }
                   ])
              }
            })
       }
     ])
